// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=11, b=12, c=13, d=14, e=15, f=16, g=17, h=18);
    Register(in=in, load=11, out=r1out);
    Register(in=in, load=12, out=r2out);
    Register(in=in, load=13, out=r3out);
    Register(in=in, load=14, out=r4out);
    Register(in=in, load=15, out=r5out);
    Register(in=in, load=16, out=r6out);
    Register(in=in, load=17, out=r7out);
    Register(in=in, load=18, out=r8out);
    Mux8Way16(a=r1out, b=r2out, c=r3out, d=r4out, e=r5out, f=r6out, g=r7out, h=r8out);
}