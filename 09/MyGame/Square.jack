class Square {

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;

    /** Constructs a new square with a given location and size. */
    constructor Square new(int Ax, int Ay, int Asize) {
        let x = Ax;
        let y = Ay;
        let size = Asize;

        do draw();

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + size, y + size);
        return;
    }

    /** Increments the size by 2 pixels. */
    method void incSize() {
        /**if (((y + size) < 254) & ((x + size) < 510)) {
            do erase();
            let size = size + 2;
            do draw();
        }*/
        return;
    }

    /** Decrements the size by 2 pixels. */
    method void decSize() {
        /**if (size > 2) {
            do erase();
            let size = size - 2;
            do draw();
        }*/
        return;
	}

    /** Moves up by 2 pixels. */
    method void moveUp() {
        if (y > 1) {
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
            let y = y - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + 1);

            do wallBoundary(x, y-1);
        }
        return;
    }

    /** Moves down by 2 pixels. */
    method void moveDown() {
        if ((y + size) < 254) {
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + size, y + 1);
            let y = y + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);

            do wallBoundary(x, y+1+size);
        }
        return;
    }

    /** Moves left by 2 pixels. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
            let x = x - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + size);

            do wallBoundary(x-1+size, y);
        }
        return;
    }

    /** Moves right by 2 pixels. */
    method void moveRight() {
        if ((x + size) < 510) {
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + size);
            let x = x + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);

            do wallBoundary(x+1, y);
        }
        return;
    }

    method void wallBoundary(int xLocation, int yLoaction) {
        if ((xLocation > 50) & (xLocation < 200) & (yLoaction > 100) /**&(yLoaction < 15)*/) {
            // do Screen.drawLine(50,30,505,15);
            do Output.printString("top layer wall");
            do Output.println();
            do Sys.halt();

            return;
        } 

        if ((xLocation > 100) & (xLocation < 300) & (yLoaction < 100)) {
            do Output.printString("second line");
            do Output.println();
            do Sys.halt();

            return;
        }

        if ((xLocation > 300) & (xLocation < 400) & (yLoaction < 100)) {
            do Output.printString("third line");
            do Output.println();
            do Sys.halt();

            return;
        }

        return;
    }


}
